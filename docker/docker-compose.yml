version: "3.9"

services:
  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    restart: unless-stopped
    ports:
      - "18080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - mlops-net

  minio:
    image: minio/minio:latest
    container_name: minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - mlops-net

  registry:
    image: registry:2
    container_name: registry
    restart: unless-stopped
    ports:
      - "5001:5000"
    volumes:
      - registry_data:/var/lib/registry
    networks:
      - mlops-net

  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: mlflow
      POSTGRES_USER: mlflow
      POSTGRES_PASSWORD: mlflowpassword
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mlops-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mlflow"]
      interval: 5s
      retries: 5

  mlflow:
    build: ./mlflow-postgres
    container_name: tracker_mlflow
    restart: unless-stopped
    ports:
      - "5000:5000"
    env_file:
      - .env
    volumes:
      - mlflow_data:/home/mlflow
    entrypoint: >
      mlflow server
      --backend-store-uri postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      --default-artifact-root s3://${AWS_BUCKET_NAME}/
      -h 0.0.0.0
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_started

        
networks:
  mlops-net:
    driver: bridge

volumes:
  jenkins_home:
  minio_data:
  postgres_data:
  registry_data:
  mlflow_data:
